// Code generated by MockGen. DO NOT EDIT.
// Source: routes/aws-ip-address-ranges.go

// Package mocks is a generated GoMock package.
package mocks

import (
	routes "github.com/gessnerfl/awsroutes/routes"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAwsIPAddressRanges is a mock of AwsIPAddressRanges interface
type MockAwsIPAddressRanges struct {
	ctrl     *gomock.Controller
	recorder *MockAwsIPAddressRangesMockRecorder
}

// MockAwsIPAddressRangesMockRecorder is the mock recorder for MockAwsIPAddressRanges
type MockAwsIPAddressRangesMockRecorder struct {
	mock *MockAwsIPAddressRanges
}

// NewMockAwsIPAddressRanges creates a new mock instance
func NewMockAwsIPAddressRanges(ctrl *gomock.Controller) *MockAwsIPAddressRanges {
	mock := &MockAwsIPAddressRanges{ctrl: ctrl}
	mock.recorder = &MockAwsIPAddressRangesMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAwsIPAddressRanges) EXPECT() *MockAwsIPAddressRangesMockRecorder {
	return m.recorder
}

// Update mocks base method
func (m *MockAwsIPAddressRanges) Update() (*routes.IPAddressRanges, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Update")
	ret0, _ := ret[0].(*routes.IPAddressRanges)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Update indicates an expected call of Update
func (mr *MockAwsIPAddressRangesMockRecorder) Update() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Update", reflect.TypeOf((*MockAwsIPAddressRanges)(nil).Update))
}

// Read mocks base method
func (m *MockAwsIPAddressRanges) Read() (*routes.IPAddressRanges, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read")
	ret0, _ := ret[0].(*routes.IPAddressRanges)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read
func (mr *MockAwsIPAddressRangesMockRecorder) Read() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockAwsIPAddressRanges)(nil).Read))
}
